
name: Mercurial CI with repo caching

on: push

jobs:
  update-repo:
    runs-on: ubuntu-latest

    steps:

    - name: Setup Mercurial app
      run: |
        python3 -m pip install hg-evolve --user
        echo "[extensions]" >> ~/.hgrc
        echo "topic =" >> ~/.hgrc
        hg version -v

    - name: Setup cached Mercurial repo
      uses: actions/cache@v4
      with:
        path: ~/mercurial-devel
        key: cached-repo-${{ github.run_id }}
        restore-keys: |
          cached-repo

    - name: Clone or update Mercurial repo
      run: |
        if [ -d ~/mercurial-devel ]; then
            echo "Directory exists. Pull."
            hg pull --cwd ~/mercurial-devel
        else
            echo "Directory does not exist. Clone."
            hg clone https://foss.heptapod.net/mercurial/mercurial-devel ~/mercurial-devel
        fi
        hg up default --cwd ~/mercurial-devel

    - name: Check Mercurial repo
      run: |
        cd ~/mercurial-devel
        hg log -r "-4:"
        hg sum

  sdist:
    needs: update-repo
    runs-on: ubuntu-latest
    steps:
      - name: Setup cached Mercurial repo
        uses: actions/cache@v4
        with:
          path: ~/mercurial-devel
          key: cached-repo-${{ github.run_id }}
          restore-keys: |
            cached-repo

      - name: Check Mercurial repo
        run: |
          hg log -r "-4:" --cwd ~/mercurial-devel
          hg sum --cwd ~/mercurial-devel

      - name: Make doc and MANIFEST.in
        run: |
          python -m pip install docutils
          cd ~/mercurial-devel
          make doc
          make MANIFEST.in
          cd -

      - run: python -m pip install build twine
      - run: rm -rf ~/mercurial-devel/dist
      - run: python -m build --sdist ~/mercurial-devel
      - run: ls -l ~/mercurial-devel/dist
      - run: twine check --strict ~/mercurial-devel/dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ~/mercurial-devel/dist/*.tar.gz

      - name: Untar sdist to prepare the sources for wheels
        run: |
          cd ~/mercurial-devel/dist/
          tar -xf *.tar.gz
          rm -f *.tar.gz
          mv mercurial* sources

      - name: Save the source directory as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: sources
          path: ~/mercurial-devel/dist/sources
          include-hidden-files: true

  check-sdist:
    runs-on: ubuntu-latest
    needs:
      - sdist
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sdist
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: |
          pip install pip -U
          ls
          pip install mercurial-*.tar.gz -v --no-deps

  wheels:
    needs: sdist
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            architecture: x86_64
          # too long, see job wheel-ubuntu-aarch64
          # - os: ubuntu
          #   architecture: aarch64
          - os: macos
            architecture: x86_64
          - os: macos
            architecture: arm64
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sources
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_SKIP: cp36-* cp37-* cp38-* *-musllinux*
          CIBW_ARCHS: ${{ matrix.architecture }}
          CIBW_TEST_COMMAND: >
            which hg &&
            hg version -v

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.architecture }}
          path: wheelhouse/*.whl

  wheels-windows:
    needs: sdist
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            architecture: AMD64
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sources
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_SKIP: pp* cp36-* cp37-* cp38-* *-musllinux*
          CIBW_ARCHS: ${{ matrix.architecture }}
          CIBW_TEST_COMMAND: >
            which hg &&
            hg version -v
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.architecture }}
          path: wheelhouse/*.whl

  wheel-ubuntu-aarch64:
    needs: sdist
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sources
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_SKIP: pp* cp36-* cp37-* cp38-* *-musllinux*
          CIBW_ARCHS: aarch64
          CIBW_TEST_COMMAND: >
            which hg &&
            hg version -v
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-ubuntu-aarch64
          path: wheelhouse/*.whl

  # pypi-publish:
  #   name: Upload release to PyPI
  #   if: |
  #     github.event_name == 'push' &&
  #     startsWith(github.ref, 'refs/tags/')
  #   needs:
  #     - wheels
  #     - wheels-windows
  #     - wheel-ubuntu-aarch64
  #     - sdist
  #     - check-sdist
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: publish
  #     url: https://pypi.org/p/mercurial
  #   permissions:
  #     id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
  #   steps:
  #   - uses: actions/download-artifact@v4
  #     with:
  #       path: dist
  #       merge-multiple: true
  #   - run: ls dist
  #   - name: Publish package distributions to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
